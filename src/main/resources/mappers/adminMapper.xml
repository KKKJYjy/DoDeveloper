<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dodeveloper.mappers.adminMapper">

	<!-- study게시글 조회 -->
	<select id="getBoard" resultType="AdminVO">
		select * from studyBoard order
		by stuNo desc limit #{startRowIndex},#{viewPostCntPerPage}
	</select>

	<!-- 스터디게시글 전체 갯수 -->
	<select id="getTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from studyBoard
	</select>

	<!-- 강의추천게시글 전체 갯수 -->
	<select id="getLecTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from lectureBoard
	</select>

	<!-- 알고리즘 게시글 전체 갯수 -->
	<select id="getAlgTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from algBoard
	</select>

	<!-- 기업리뷰 게시글 전체 갯수 -->
	<select id="getRevTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from companyrevboard
	</select>

	<!-- 공지사항 게시글 전체 갯수 -->
	<select id="getNotcTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from noticeBoard
	</select>

	<!-- 문의 게시글 전체 갯수 -->
	<select id="getQnaTotalBoardCnt" resultType="int">
		select count(*) as
		totalPostCnt from qnaBoard
	</select>



	<!-- 강의추천게시판 조회 -->
	<select id="getLecBoard" resultType="AdminLectureVO">
		select * from lectureBoard
		order by lecNo desc limit
		#{startRowIndex},#{viewPostCntPerPage}
	</select>

	<!-- 알고리즘게시판 조회 -->
	<select id="getArgBoard" resultType="AdminArgBoardVO">
		select * from algBoard order
		by boardNo desc limit #{startRowIndex},#{viewPostCntPerPage}
	</select>

	<!-- 리뷰게시판 조회 -->
	<select id="getRevBoard" resultType="AdminReviewBoardVO">
		select * from
		companyrevboard order by revNo desc limit
		#{startRowIndex},#{viewPostCntPerPage}
	</select>

	<!-- 공지사항 조회 -->
	<select id="getNotcBoard" resultType="NoticeDTO">
		select * from noticeBoard
		order by boardNo desc limit #{startRowIndex},#{viewPostCntPerPage}
	</select>


	<!-- 검색어가 있을 경우 글의 갯수를 가져오는 쿼리문 -->
	<select id="getStuBoardCntWithSC" resultType="int">
		select count(*) from studyBoard
		<choose>
			<when test="searchType == 'title'">
				where stuTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where stuWriter like #{searchValue}
			</when>
		</choose>
	</select>

	<!-- 검색어가 있을 경우 검색된 글을 가져오는 쿼리문 -->
	<select id="getStuBoardListWithSC" resultType="AdminVO">
		select * from studyBoard
		<choose>
			<when test="searchType == 'title'">
				where stuTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where stuWriter like #{searchValue}
			</when>
		</choose>

		order by stuNo desc limit #{startRowIndex}, #{viewPostCntPerPage}
	</select>

	<!-- 강의추천 검색어가 있을 경우 글의 갯수를 가져오는 쿼리문 -->
	<select id="getLecBoardCntWithSC" resultType="int">
		select count(*) from lectureBoard
		<choose>
			<when test="searchType == 'title'">
				where lecTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where lecWriter like #{searchValue}
			</when>
		</choose>
	</select>

	<!-- 강의추천 검색어가 있을 경우 검색된 글을 가져오는 쿼리문 -->
	<select id="getLecBoardListWithSC" resultType="AdminLectureVO">
		select * from lectureBoard
		<choose>
			<when test="searchType == 'title'">
				where lecTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where lecWriter like #{searchValue}
			</when>
		</choose>

		order by lecNo desc limit #{startRowIndex}, #{viewPostCntPerPage}
	</select>

	<!-- 알고리즘 검색어가 있을 경우 글의 갯수를 가져오는 쿼리문 -->
	<select id="getAlgBoardCntWithSC" resultType="int">
		select count(*) from algBoard
		<choose>
			<when test="searchType == 'title'">
				where title like #{searchValue}
			</when>

		</choose>
	</select>


	<!-- 알고리즘 검색어가 있을 경우 검색된 글을 가져오는 쿼리문 -->
	<select id="getAlgBoardListWithSC" resultType="AdminArgBoardVO">
		select * from algBoard
		<choose>
			<when test="searchType == 'title'">
				where title like #{searchValue}
			</when>

		</choose>

		order by boardNo desc limit #{startRowIndex}, #{viewPostCntPerPage}
	</select>


	<!-- 기업리뷰 검색어가 있을 경우 글의 갯수를 가져오는 쿼리문 -->
	<select id="getRevBoardCntWithSC" resultType="int">
		select count(*) from companyrevboard
		<choose>
			<when test="searchType == 'title'">
				where revTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where revWriter like #{searchValue}
			</when>
		</choose>
	</select>

	<!-- 기업리뷰 검색어가 있을 경우 검색된 글을 가져오는 쿼리문 -->
	<select id="getRevBoardListWithSC"
		resultType="AdminReviewBoardVO">
		select * from companyrevboard
		<choose>
			<when test="searchType == 'title'">
				where revTitle like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where revWriter like #{searchValue}
			</when>
		</choose>

		order by revNo desc limit #{startRowIndex}, #{viewPostCntPerPage}
	</select>

	<!-- 공지사항 검색어가 있을경우 글의 갯수를 가져오는 쿼리문 -->
	<select id="getNotcBoardCntWithSC" resultType="int">
		select count(*) from noticeBoard
		<choose>
			<when test="searchType == 'title'">
				where title like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where writer like #{searchValue}
			</when>
		</choose>
	</select>


	<!-- 공지사항 검색어가 있을 경우 검색된 글을 가져오는 쿼리문 -->
	<select id="getNotcBoardListWithSC" resultType="NoticeDTO">
		select * from noticeBoard
		<choose>
			<when test="searchType == 'title'">
				where title like #{searchValue}
			</when>
			<when test="searchType == 'writer'">
				where writer like #{searchValue}
			</when>
		</choose>

		order by boardNo desc limit #{startRowIndex}, #{viewPostCntPerPage}
	</select>




	<!-- stuBoard게시글 삭제 -->
	<delete id="deleteStuBoard">
		delete from studyBoard where stuNo = #{stuNo}
	</delete>

	<!-- 강의추천 게시글 삭제 -->
	<delete id="deleteLecBoard">
		delete from lectureBoard where lecNo = #{lecNo}
	</delete>

	<!-- 알고리즘 게시글 삭제 -->
	<delete id="deleteAlgBoard">
		delete from algBoard where boardNo = #{boardNo}
	</delete>

	<!-- reviewBoard 게시글 삭제 -->
	<delete id="deleteRevBoard">
		delete from companyrevboard where revNo = #{revNo}
	</delete>

	<!-- 공지사항 게시글 삭제 -->
	<delete id="deleteNotcBoard">
		delete from noticeBoard where boardNo = #{boardNo}
	</delete>


	<!-- 신고내역 삭제 -->
	<delete id="deleteReportBoard">
		delete from reportBoard where reportNo = #{reportNo}
	</delete>


	<!-- 문의 게시글 삭제 -->
	<delete id="deleteQnaBoard">
		delete from qnaBoard where no = #{no}
	</delete>



	<!-- 공지사항 작성 -->
	<insert id="insertNoticeBoard">
		insert into noticeBoard(writer, title, content)
		values(#{writer}, #{title}, #{content})
	</insert>

	<!-- 신고내역 조회 -->
	<select id="getReport" resultType="ReportVO">
		select * from reportBoard
		order by reportNo desc
	</select>

	<!-- 신고내역 ?번 글을 가져오는 쿼리문 -->
	<select id="selectReportNo" resultType="ReportVO">
		select * from reportBoard
		where btypeNo = #{btypeNo}
	</select>

	<!-- 공지사항 ?번 글 조회 -->
	<select id="selectNoticeBoardNo" resultType="NoticeDTO">
		select * from
		noticeBoard where boardNo = #{boardNo}
	</select>

	<!-- 공지사항 게시글 수정 -->
	<update id="updateNotcBoard">
		update noticeBoard set title = #{title}, postDate =
		now(), content = #{content}
		where boardNo = #{boardNo}
	</update>

	<!-- 문의 게시글 조회 -->
	<select id="selectQna" resultType="QnaBoardVO">
		select * from qnaBoard order
		by no desc limit #{startRowIndex},#{viewPostCntPerPage}
	</select>

	<!-- 문의 ?번 글 가져오는 쿼리문 -->
	<select id="selectQnaBoardNo" resultType="QnaBoardVO">
		select * from qnaBoard
		where no = #{no}
	</select>

	<!-- 문의사항 작성 -->
	<insert id="insertQna">
		insert into qnaBoard(qnaWriter, qnaTitle, qnaContent)
		values(#{qnaWriter}, #{qnaTitle}, #{qnaContent})
	</insert>


	<!-- 공지사항 최신글 5개 조회 -->
	<select id="selectDiffNotc" resultType="NoticeDTO">
		select * from noticeBoard
		order by boardNo desc limit 5
	</select>

	<!-- 문의사항 최신글 5개 조회 -->
	<select id="selectDiffQna" resultType="QnaBoardVO">
		select * from qnaBoard
		order by no desc limit 5
	</select>

	<!-- 스터디모임 최신글 5개 조회 -->
	<select id="selectDiffStu" resultType="AdminVO">
		select * from studyBoard
		order by stuNo desc limit 5
	</select>

	<!-- 강의추천 최신글 5개 조회 -->
	<select id="selectDiffLec" resultType="AdminLectureVO">
		select * from lectureBoard
		order by lecNo desc limit 5
	</select>

	<!-- 알고리즘 최신글 5개 조회 -->
	<select id="selectDiffAlg" resultType="AdminArgBoardVO">
		select * from algBoard
		order by boardNo desc limit 5
	</select>

	<!-- 기업리뷰 최신글 5개 조회 -->
	<select id="selectDiffRev" resultType="AdminReviewBoardVO">
		select * from
		companyrevboard order by revNo desc limit 5
	</select>





	<!-- 유저 전체 조회 -->
	<select id="selectAllUser" resultType="UserDTO">
		SELECT m.userId,
		m.userName,
		m.email,
		m.registerDate,
		m.status,
		COALESCE(b.penaltyCnt, 0) AS penaltyCnt,
		b.suspendEnd
		FROM member m
		LEFT JOIN (
		SELECT userId, MAX(penaltyCnt) AS penaltyCnt, MAX(suspendEnd) AS suspendEnd
		FROM badMemberBoard
		GROUP BY userId
		) b ON m.userId = b.userId;
	</select>



	<!-- 유저 상태변경 -->
	<update id="updateUserStatus" parameterType="java.util.Map">
		UPDATE member
		SET
		status = #{newStatus}
		WHERE userId = #{userId}
	</update>

	<!-- 정지가 되면 패널티가 가장 큰 행에 정지일과 해제일 update -->
	<update id="updatePenaltyRecord" parameterType="java.util.Map">
		UPDATE
		badMemberBoard b1
		SET b1.suspendStart = #{suspendStart},
		b1.suspendEnd =
		#{suspendEnd}
		WHERE b1.userId = #{userId}
		AND b1.penaltyCnt = (
		SELECT
		temp.maxPenaltyCnt
		FROM (
		SELECT MAX(b2.penaltyCnt) AS maxPenaltyCnt
		FROM badMemberBoard b2
		WHERE b2.userId = #{userId}
		) AS temp
		);
	</update>

	<!-- 탈퇴회원 처리 -->
	<update id="permanentBanUser" parameterType="String">
		UPDATE member
		SET
		status = '탈퇴회원'
		WHERE userId = #{userId}
	</update>




	<!-- 접속기록 저장 -->
	<insert id="insertLog">
		insert into accessLog(sessionId, uri, accessDate)
		values(#{sessionId}, #{uri}, #{accessDate})
	</insert>

	<!-- 페이지 접속 횟수 조회 -->
	<select id="selectLog"
		resultType="com.dodeveloper.admin.vo.CountUriVO">
		SELECT u.uriName, COUNT(*) as accessCount
		FROM accessLog a,
		uri u
		WHERE
		a.uri = u.uri
		GROUP BY
		u.uriName
	</select>

	<!-- 날짜별 접속자 수 조회 -->
	<select id="selectDatelog"
		resultType="com.dodeveloper.admin.vo.ConnectLogVO">
		SELECT
		DATE_FORMAT(`accessDate`, '%d') as `date`,
		COUNT(*) as
		`count`
		FROM `accessLog`
		WHERE MONTH(`accessDate`) =
		#{date}
		GROUP BY
		date(`accessDate`)

	</select>

	<!-- 최신 공지글 5개를 가져오는 메서드 (메인홈에 출력할 용도) -->
	<select id="getNoticeTop5" resultType="NoticeDTO">
		SELECT * FROM noticeBoard
		order by postDate desc limit 5
	</select>


	<!-- 신고내역 삭제 -->
	<delete id="deleteReport">
		DELETE FROM reportBoard
		WHERE btypeNo = #{btypeNo}
		AND
		boardNo = #{boardNo}
	</delete>

	<!-- btype에 해당되는 테이블에 글 삭제 -->
	<delete id="deleteBoard">
		DELETE FROM
		<choose>
			<when test="btypeNo == 1">
				lectureBoard WHERE lecNo = #{boardNo}
			</when>
			<when test="btypeNo == 2">
				studyBoard WHERE stuNo = #{boardNo}
			</when>
			<when test="btypeNo == 4">
				algBoard WHERE boardNo = #{boardNo}
			</when>
		</choose>
	</delete>


	<insert id="insertPenalty">
		INSERT INTO badMemberBoard (userId, penaltyCnt,
		reportDate, suspendReason)
		SELECT
		#{userId},
		IFNULL(MAX(penaltyCnt), 0) +
		1,
		NOW(),
		#{reportReason}
		FROM
		badMemberBoard
		WHERE
		userId = #{userId}
		ON
		DUPLICATE KEY UPDATE
		penaltyCnt = VALUES(penaltyCnt);
	</insert>

	<!-- 체크박스에 선택된 글 전부 삭제 -->
	<delete id="deleteCheckBoard">
		DELETE FROM reportBoard
		WHERE reportNo = #{reportNo}
	</delete>

</mapper>